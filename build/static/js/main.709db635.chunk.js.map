{"version":3,"sources":["CustomHook/chekifNull.js","components/profiles/Filters.js","components/profiles/AllProfiles.js","components/messages/Chat.js","components/profiles/SingleProfile.js","components/messages/GetInsideMessages.js","components/messages/MyMessages.js","components/user/Myprofile.js","components/user/UploadImage.js","components/user/Myalbum.js","components/user/EditProfile.js","components/user/Login.js","Layout/Notifications.js","Layout/Layout.js","CustomHook/PrivateRoute.js","components/user/RegistrationForm .js","components/user/RedirectProfile.js","components/user/ForgotPassword.js","components/user/ResetPassword.js","components/match/MatchPage.js","components/Home/LatestProfiles.js","components/Home/Home.js","components/match/ChildmyMatch.js","components/match/MyMatches.js","App.js","reportWebVitals.js","Redux/actions.js","Redux/myConversations.js","Redux/toggleTriggerFetchs.js","Redux/conversationReducer.js","Redux/myProfileReducer.js","Redux/myNotifications.js","Redux/AmiLogged.js","Redux/main.js","index.js"],"names":["usenullOrEmpty","param","Filters","filterProfiles","useState","isModalVisible","setIsModalVisible","theyAre","theyLook","relationshipStatus","ageFrom","ageTo","heightFrom","heightTo","weightFrom","weightTo","filter","setFilter","options","label","value","type","onClick","title","visible","okButtonProps","style","display","onCancel","className","Group","onChange","e","target","optionType","min","range","defaultValue","max","AllProfiles","Meta","Card","allprofiles","setallProfiles","isFiltered","setIsFiltered","fetchBackProfiles","setfetchBackProfiles","error","setError","useEffect","Axios","method","headers","withCredentials","url","then","res","data","catch","err","console","log","status","length","closeButtonAndReFetch","flexDirection","justifyContent","window","innerWidth","width","marginBottom","borderBottom","paddingBottom","marginLeft","flexWrap","maxHeight","margin","overflowY","map","el","index","to","profile_id","hoverable","padding","cover","border","size","src","images","fontSize","nickname","fullname","color","moment","age","fromNow","description","city","Chat","sendTo","dispatch","useDispatch","params","useLocation","history","useHistory","conversationIDREDUX","useSelector","state","conversationReducer","myprofileImage","myProfileReducer","text","form","setForm","handleSubmit","event","preventDefault","realTime","pathname","includes","action","Number","conversation_id","push","message","conversationID","chatimage","marginTop","onSubmit","placeholder","name","disabled","SingleProfile","myConversationRedux","myConversations","newOrRedirect","useParams","profile","setProfile","id","filterArray","user_id","userlog_id","findConversation","badge","setBadge","alignItems","PreviewGroup","album","height","layout","bordered","Item","span","country","sex","ManOutlined","fontWeight","WomanOutlined","weight","searching","relationship","icon","WechatOutlined","shown_user","HeartOutlined","onOk","showIcon","GetInsideMessages","open","handleOpen","mymessages","getcookie","Cookies","get","SendMessages","setSendMessages","messagesEndRef","useRef","current","scrollIntoView","behavior","channel","Pusher","process","authEndpoint","cluster","encrypted","subscribe","bind","newmessage","unbind_all","unsubscribe","response","alignSelf","sender_id","fontStyle","justifySelf","created_at","startOf","position","borderRadius","backgroundColor","top","left","alt","ref","MyMessages","TabPane","Tabs","openID","msgNotifc","myNotifications","useCallback","defaultActiveKey","tabPosition","tab","messages","z","count","zIndex","Myprofile","Title","Typography","Text","myprofileREDUX","level","FormData","require","UploadImage","file","image","setImage","loading","setLoading","imageUrl","setimageUrl","append","changeProfileImage","success","location","reload","isJpgOrPng","isLt2M","beforeUpload","files","LoadingOutlined","PlusOutlined","Myalbum","myalbum","setMyalbum","deleteLoading","setDeleteLoading","profileLoading","setProfileLoading","Object","keys","key","thearrimg","multiple","deleteItem","DeleteOutlined","danger","profileItem","UserOutlined","EditProfile","Option","Select","tablevel","setTabLevel","TextArea","Input","phone","handleChange","showModal","SettingOutlined","cursor","compact","format","errors","msg","textAlign","Login","closeNav","email","password","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","LoginOutlined","FacebookOutlined","Notifications","AlertOutlined","FireOutlined","MessageOutlined","Layout","props","isLoged","AmiLogged","reTrigger","toggleTriggerFetchs","setOpen","CloseCircleOutlined","MenuOutlined","HomeOutlined","UsergroupAddOutlined","remove","children","PrivateRoute","Component","component","rest","render","from","RegistrationForm","passwordConfirmation","username","RedirectProfile","ForgotPassword","setSuccess","ResetPassword","MatchPage","db","setDB","characters","setCharacters","lastDirection","setLastDirection","setMsg","retrigger","setReTrigger","insertInMatches","childRefs","useMemo","Array","fill","i","React","createRef","swipe","dir","msgcopy","copy","splice","character","onSwipe","direction","onCardLeftScreen","outOfFrame","backgroundImage","FrownOutlined","HeartTwoTone","spin","twoToneColor","PlayCircleOutlined","LatestProfiles","lastprofs","setLastprofs","alignContent","xs","sm","md","lg","xl","xxl","marign","Home","autoplay","RightCircleOutlined","ChildmyMatch","matchID","flex","marginRight","MyMatches","mymatches","setMymatches","overflow","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reTriggerFunc","changeConversationID","updateMyProfileState","updateMyConversations","pushToMyConversations","copyState","isLoggedIn","msgNotific","myprofile","matches","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.709db635.chunk.js","sourcesContent":["export const usenullOrEmpty = (param) => {\r\n  if (param === null) {\r\n    return \"Unknown\";\r\n  } else if (param === \"\") {\r\n    return \"Unknown\";\r\n  } else {\r\n    return param;\r\n  }\r\n};\r\n//CHecks if value is null or \"\"\r\n","import React, { useState } from \"react\";\r\nimport \"./Filter.css\";\r\nimport { Radio, Slider, Button, Modal } from \"antd\";\r\nconst Filters = ({ filterProfiles }) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false); // Modal\r\n  const [filter, setFilter] = useState({\r\n    theyAre: \"Male\",\r\n    theyLook: \"Woman\",\r\n    relationshipStatus: \"Single\",\r\n    ageFrom: 18,\r\n    ageTo: 30,\r\n    heightFrom: 170,\r\n    heightTo: 200,\r\n    weightFrom: 50,\r\n    weightTo: 180,\r\n  });\r\n  const onChangeTheyAre = (e) => {\r\n    setFilter({ ...filter, theyAre: e.target.value });\r\n  };\r\n\r\n  const onChangeTheyLook = (e) => {\r\n    setFilter({ ...filter, theyLook: e.target.value });\r\n  };\r\n  const onChangeTheirStatus = (e) => {\r\n    setFilter({ ...filter, relationshipStatus: e.target.value });\r\n  };\r\n\r\n  const options = [\r\n    { label: \"Male\", value: \"Male\" },\r\n    { label: \"Woman\", value: \"Woman\" },\r\n    { label: \"Other\", value: \"Other\" },\r\n  ];\r\n  const optionsrelation = [\r\n    { label: \"Single\", value: \"Single\" },\r\n    { label: \"In relationship\", value: \"In relationship\" },\r\n    { label: \"Married\", value: \"Married\" },\r\n    { label: \"Other\", value: \"Other\" },\r\n  ];\r\n\r\n  //Slider\r\n  const onChangeAge = (e) => {\r\n    setFilter({ ...filter, ageFrom: e[0], ageTo: e[1] });\r\n  };\r\n  const onChangeHeight = (e) => {\r\n    setFilter({ ...filter, heightFrom: e[0], heightTo: e[1] });\r\n  };\r\n  const onChangeWeight = (e) => {\r\n    setFilter({ ...filter, heightFrom: e[0], heightTo: e[1] });\r\n  };\r\n  // MODAL\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const submitFilterAndClose = () => {\r\n    filterProfiles(filter);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Select Filters\r\n      </Button>\r\n      <Modal\r\n        title=\"Please check all fields!\"\r\n        visible={isModalVisible}\r\n        okButtonProps={{ style: { display: \"none\" } }}\r\n        onCancel={handleCancel}\r\n      >\r\n        <div className=\"filtersGroup\">\r\n          <p>Choose profiles genre</p>\r\n          <Radio.Group\r\n            options={options}\r\n            onChange={onChangeTheyAre}\r\n            value={filter.theyAre}\r\n            optionType=\"button\"\r\n          />\r\n          <p>They are in to?</p>\r\n          <Radio.Group\r\n            options={options}\r\n            onChange={onChangeTheyLook}\r\n            value={filter.theyLook}\r\n            optionType=\"button\"\r\n          />\r\n          <p>Their relationship status?</p>\r\n          <Radio.Group\r\n            options={optionsrelation}\r\n            onChange={onChangeTheirStatus}\r\n            value={filter.relationshipStatus}\r\n            optionType=\"button\"\r\n          />\r\n          <p>Age Range</p>\r\n          <Slider\r\n            min={18}\r\n            range\r\n            defaultValue={[filter.ageFrom, filter.ageTo]}\r\n            onChange={onChangeAge}\r\n          />\r\n          <p>Height Range(cm) </p>\r\n          <Slider\r\n            max={200}\r\n            min={150}\r\n            range={true}\r\n            defaultValue={[filter.heightFrom, filter.heightTo]}\r\n            onChange={onChangeHeight}\r\n          />\r\n          <p>Weight Range(kg)</p>\r\n          <Slider\r\n            max={200}\r\n            min={40}\r\n            range={true}\r\n            defaultValue={[filter.weightFrom, filter.weightTo]}\r\n            onChange={onChangeWeight}\r\n          />\r\n          <Button type=\"primary\" onClick={submitFilterAndClose}>\r\n            Submit Filters\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { usenullOrEmpty } from \"../../CustomHook/chekifNull\";\r\nimport moment from \"moment\";\r\nimport Filters from \"./Filters\";\r\n//ANT DESIGN\r\nimport { Avatar, Button, Card, Spin } from \"antd\";\r\nconst AllProfiles = () => {\r\n  const { Meta } = Card;\r\n  // Ant Design Meta\r\n  const [allprofiles, setallProfiles] = useState([]);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n  const [fetchBackProfiles, setfetchBackProfiles] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/profiles/allprofiles\",\r\n    })\r\n      .then((res) => {\r\n        setallProfiles(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [fetchBackProfiles]);\r\n\r\n  const filterProfiles = (param) => {\r\n    Axios({\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: param,\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/profiles/filterProfile\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setIsFiltered(true);\r\n          if (!res.data.data.length) {\r\n            setError(\"No results found with this filter!\");\r\n          }\r\n          setallProfiles(res.data.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const closeButtonAndReFetch = () => {\r\n    setfetchBackProfiles(!fetchBackProfiles);\r\n    setIsFiltered(false);\r\n  };\r\n  if (!allprofiles.length) {\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n            width: \"100%\",\r\n\r\n            marginBottom: \"10px\",\r\n            borderBottom: \"1px solid #ccc\",\r\n            paddingBottom: \"5px\",\r\n          }}\r\n        >\r\n          <Filters filterProfiles={filterProfiles} />\r\n          {isFiltered && (\r\n            <Button\r\n              style={{ marginLeft: \"5px\" }}\r\n              onClick={closeButtonAndReFetch}\r\n            >\r\n              {\" \"}\r\n              X Remove Filters\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <Spin size=\"large\" />\r\n        <span style={{ color: \"red\" }}>{error && error}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: window.innerWidth <= 768 ? \"flex-end\" : \"flex-start\",\r\n          width: \"100%\",\r\n          marginBottom: \"10px\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          paddingBottom: \"5px\",\r\n        }}\r\n      >\r\n        <Filters filterProfiles={filterProfiles} />\r\n        {isFiltered && (\r\n          <Button style={{ marginLeft: \"5px\" }} onClick={closeButtonAndReFetch}>\r\n            {\" \"}\r\n            X Remove Filters\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          maxHeight: \"80vh\",\r\n          margin: \"0 auto\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        {allprofiles.map((el, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                margin: \"5px\",\r\n              }}\r\n            >\r\n              <Link to={`/allprofiles/${el.profile_id}`}>\r\n                <Card\r\n                  hoverable\r\n                  style={{\r\n                    width: window.innerWidth <= 768 ? 150 : 200,\r\n                    padding: \"15px\",\r\n                  }}\r\n                  cover={\r\n                    <Avatar\r\n                      style={{ border: \"1px solid #003a8c\" }}\r\n                      size={window.innerWidth <= 768 ? 120 : 180}\r\n                      src={\r\n                        el.images.length\r\n                          ? el.images[0]\r\n                          : \"https://www.pngitem.com/pimgs/m/581-5813504_avatar-dummy-png-transparent-png.png\"\r\n                      }\r\n                    />\r\n                  }\r\n                >\r\n                  <Meta\r\n                    title={\r\n                      <div\r\n                        style={{\r\n                          fontSize: window.innerWidth <= 768 ? \"12px\" : \"\",\r\n                        }}\r\n                      >\r\n                        {el.nickname ? el.nickname : el.fullname},\r\n                        <p style={{ fontSize: \"12px\", color: \"#ccc\" }}>\r\n                          {moment(el.age, \"YYYYMMDD\").fromNow(true)}\r\n                        </p>\r\n                      </div>\r\n                    }\r\n                    // {moment(el.age, \"YYYYMMDD\").fromNow(true)}\r\n                    description={usenullOrEmpty(el.city)}\r\n                  />\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllProfiles;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//ANT DESING\r\nimport { Input, Button } from \"antd\";\r\n//\r\n//  COMPONENTS TO START CONVERSATION ALSO USE DIN THE CHAT !\r\nconst Chat = ({ sendTo }) => {\r\n  const dispatch = useDispatch(); //REDUX\r\n  const params = useLocation(); //Router\r\n  const history = useHistory();\r\n  const conversationIDREDUX = useSelector((state) => state.conversationReducer);\r\n  const myprofileImage = useSelector((state) => state.myProfileReducer);\r\n  const [form, setForm] = useState({\r\n    text: \"\",\r\n  });\r\n  const handleChange = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    setForm({ text: \"\" });\r\n    event.preventDefault();\r\n    Axios({\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        text: form.text,\r\n      },\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/chat/startconversation/${sendTo}`,\r\n    })\r\n      .then((res) => {\r\n        realTime(res.data.data[0]);\r\n\r\n        if (\r\n          params.pathname.includes(\"/allprofiles/\") ||\r\n          params.pathname.includes(\"/mymatches\")\r\n        ) {\r\n          dispatch({\r\n            type: \"CHANGE_CONVERSATION_ID\",\r\n            action: Number(res.data.data[0].conversation_id),\r\n          });\r\n          history.push(\"/mymessages\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response.status); // 401\r\n        // console.log(error.response.data);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const realTime = (event) => {\r\n    Axios({\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        message: event.message,\r\n        conversationID: params.pathname.includes(\"/allprofiles/\")\r\n          ? event.conversation_id\r\n          : conversationIDREDUX,\r\n        chatimage: myprofileImage.images[0]\r\n          ? myprofileImage.images[0]\r\n          : \"https://www.pngitem.com/pimgs/m/581-5813504_avatar-dummy-png-transparent-png.png\",\r\n        fullname: myprofileImage.fullname,\r\n      },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/chat/message/send`,\r\n    })\r\n      .then((res) => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"15px\" }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          style={{ width: \"80%\" }}\r\n          placeholder=\"Write a message\"\r\n          type=\"text\"\r\n          name=\"text\"\r\n          value={form.text}\r\n          onChange={handleChange}\r\n        />\r\n        <Button\r\n          disabled={form.text === \"\" ? true : false}\r\n          type=\"primary\"\r\n          onClick={handleSubmit}\r\n        >\r\n          Send\r\n        </Button>\r\n        {/* <input type=\"submit\" value=\"Submit\" /> */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Chat from \"../messages/Chat\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./SingleProfile.css\";\r\nimport moment from \"moment\";\r\nimport { usenullOrEmpty } from \"../../CustomHook/chekifNull\";\r\nimport { useSelector, useDispatch } from \"react-redux\"; //REDUX\r\n\r\n//ANT\r\n\r\nimport { Descriptions, Image, Badge, Modal, Button, Alert, Spin } from \"antd\";\r\nimport {\r\n  ManOutlined,\r\n  WomanOutlined,\r\n  WechatOutlined,\r\n  HeartOutlined,\r\n} from \"@ant-design/icons\";\r\n//\r\n\r\nconst SingleProfile = () => {\r\n  const history = useHistory(); // React Router\r\n  const myConversationRedux = useSelector((state) => state.myConversations);\r\n  const newOrRedirect = useSelector((state) => state.conversationReducer); // REDUX\r\n\r\n  const dispatch = useDispatch(); //REDUX\r\n  const [isModalVisible, setIsModalVisible] = useState(false); // ANT MODAL toggle\r\n\r\n  const params = useParams(); //Router\r\n  const [profile, setProfile] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const findConversation = (data) => {\r\n      const filterArray = myConversationRedux.filter(\r\n        (el) => el.user_id === data[0].userlog_id\r\n      );\r\n\r\n      if (filterArray.length) {\r\n        dispatch({\r\n          type: \"CHANGE_CONVERSATION_ID\",\r\n          action: filterArray[0].conversation_id,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"CHANGE_CONVERSATION_ID\",\r\n          action: null,\r\n        });\r\n      }\r\n    };\r\n\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/profiles/allprofiles/${params.id}`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setProfile(res.data);\r\n          findConversation(res.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [params.id, dispatch, myConversationRedux]);\r\n\r\n  // ANT MODAL\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  // If got covnersation\r\n  const alreadyGotChat = () => {\r\n    history.push(\"/mymessages\");\r\n  };\r\n  // MATCH FROM SINGLE PROFILE\r\n  const [badge, setBadge] = useState(false);\r\n  const insertInMatches = (param) => {\r\n    Axios({\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        shown_user: param,\r\n      },\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/matches/insertmatch\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setBadge(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  if (!profile.length) return <Spin size=\"large\" />;\r\n  else\r\n    return (\r\n      <div className=\"myGrid\">\r\n        {/* /*                         IMAGES */}\r\n        <div\r\n          className=\"imageGridEl\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: \"0 auto\",\r\n\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          <div style={{ borderBottom: \"1px solid #E99AF2\", padding: \"15px\" }}>\r\n            <Image width={300} src={usenullOrEmpty(profile[0].images[0])} />\r\n          </div>\r\n\r\n          <div style={{ borderBottom: \"1px solid #E99AF2c\", padding: \"15px\" }}>\r\n            <Image.PreviewGroup>\r\n              {profile[0].album.length\r\n                ? profile[0].album.map((el, index) => {\r\n                    return <Image width={75} height={75} src={el} key={el} />;\r\n                  })\r\n                : \"User hasnt added yet any album photos!\"}\r\n            </Image.PreviewGroup>\r\n          </div>\r\n        </div>\r\n        {/* /*                        END IMAGE */}\r\n        {/* /*                         DESCRIPTIONS */}\r\n        <div className=\"descriptions\">\r\n          <Descriptions title=\"Profile Info\" layout=\"vertical\" bordered>\r\n            <Descriptions.Item label=\"Nickname\">\r\n              {usenullOrEmpty(profile[0].nickname)}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Name\">\r\n              {usenullOrEmpty(profile[0].fullname)}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Age\">\r\n              {moment(profile[0].age, \"YYYYMMDD\").fromNow(true)}\r\n            </Descriptions.Item>\r\n\r\n            <Descriptions.Item label=\"City\" span={2}>\r\n              {usenullOrEmpty(profile[0].city)}\r\n            </Descriptions.Item>\r\n\r\n            <Descriptions.Item label=\"Country\">\r\n              {usenullOrEmpty(profile[0].country)}\r\n            </Descriptions.Item>\r\n\r\n            <Descriptions.Item label=\"Genre\">\r\n              {profile[0].sex === \"Male\" ? (\r\n                <span>\r\n                  <ManOutlined\r\n                    style={{\r\n                      color: \"blue\",\r\n                      fontSize: \"18px\",\r\n                      fontWeight: \"700\",\r\n                    }}\r\n                  />{\" \"}\r\n                  Male\r\n                </span>\r\n              ) : profile[0].sex === \"Woman\" ? (\r\n                <span>\r\n                  <WomanOutlined\r\n                    style={{\r\n                      color: \"#9e3571\",\r\n                      fontSize: \"18px\",\r\n                      fontWeight: \"700\",\r\n                    }}\r\n                  />{\" \"}\r\n                  Woman\r\n                </span>\r\n              ) : (\r\n                \"Other\"\r\n              )}\r\n            </Descriptions.Item>\r\n\r\n            <Descriptions.Item label=\"Weight\">\r\n              {usenullOrEmpty(profile[0].weight)}\r\n            </Descriptions.Item>\r\n\r\n            <Descriptions.Item label=\"Height\">\r\n              {usenullOrEmpty(profile[0].height)}\r\n            </Descriptions.Item>\r\n\r\n            <Descriptions.Item label=\"Interested in\" span={3}>\r\n              {profile[0].searching}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Status\" span={3}>\r\n              <Badge\r\n                status={\r\n                  profile[0].relationship === \"single\"\r\n                    ? \"success\"\r\n                    : profile[0].relationship === \"Married\"\r\n                    ? \"error\"\r\n                    : profile[0].relationship === \"In relationship\"\r\n                    ? \"error\"\r\n                    : profile[0].relationship === \"Other\"\r\n                    ? \"warning\"\r\n                    : \"default\"\r\n                }\r\n                text={profile[0].relationship}\r\n              />\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"About me\" span={3}>\r\n              {profile[0].description}\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        </div>\r\n        <div className=\"buttonsBox\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={newOrRedirect === null ? showModal : alreadyGotChat}\r\n            className=\"btnCHatStart\"\r\n            icon={<WechatOutlined style={{ fontSize: \"55px\" }} />}\r\n          ></Button>\r\n\r\n          <Button\r\n            onClick={() => insertInMatches(profile[0].userlog_id)}\r\n            type=\"primary\"\r\n            className=\"btnMatchStart\"\r\n            icon={<HeartOutlined style={{ fontSize: \"55px\" }} />}\r\n          ></Button>\r\n          <Modal\r\n            title={`Send a message if you wanta to start conversation with: ${profile[0].fullname}`}\r\n            visible={isModalVisible}\r\n            okButtonProps={{ style: { display: \"none\" } }}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n          >\r\n            <Chat sendTo={profile[0].userlog_id} />\r\n          </Modal>\r\n        </div>\r\n        <div>\r\n          {badge ? (\r\n            <Alert\r\n              message=\"Attempt to match success!\"\r\n              type=\"success\"\r\n              showIcon\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default SingleProfile;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Pusher from \"pusher-js\";\r\nimport Chat from \"./Chat\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\n//ANT DESIGN\r\nimport { Avatar } from \"antd\";\r\n//\r\n\r\nconst GetInsideMessages = ({\r\n  conversationID,\r\n  sendTo,\r\n  open,\r\n  handleOpen,\r\n  mymessages,\r\n}) => {\r\n  const getcookie = Number(Cookies.get(\"token\"));\r\n\r\n  const [SendMessages, setSendMessages] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  useEffect(scrollToBottom, [SendMessages]);\r\n\r\n  useEffect(() => {\r\n    const pusher = new Pusher(`${process.env.REACT_APP_PUSHER_APP_KEY}`, {\r\n      authEndpoint: \"https://dateappeldate.herokuapp.com/chat/pusher/auth\",\r\n      cluster: process.env.REACT_APP_PUSHER_CLUSTER,\r\n      encrypted: true,\r\n    });\r\n\r\n    const channel = pusher.subscribe(\"private-\" + conversationID);\r\n    channel.bind(\"messages\", (newmessage) => {\r\n      setSendMessages([...SendMessages, newmessage]);\r\n    });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n    };\r\n  }, [SendMessages, conversationID]);\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/chat/getmessages/${\r\n        conversationID === null ? mymessages[0].conversation_id : conversationID\r\n      }`,\r\n    })\r\n      .then((res) => {\r\n        setSendMessages(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.status); // 401\r\n        console.log(error.response.data);\r\n      });\r\n  }, [conversationID, open, mymessages]);\r\n\r\n  if (!SendMessages.length) {\r\n    return <h1> Loading...</h1>;\r\n  } else if (!open) {\r\n    return <button onClick={handleOpen}>Open Chat</button>;\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"thisAbsolut\"\r\n        style={{\r\n          height: \"750px\",\r\n          maxHeight: \"800px\",\r\n          overflowY: \"scroll\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        {SendMessages.map((el, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                alignSelf:\r\n                  el.sender_id === getcookie ? \"flex-start\" : \"flex-end\",\r\n\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  margin: \"0 auto\",\r\n                  color: \"grey\",\r\n                  fontStyle: \"italic\",\r\n                  alignSelf: \"center\",\r\n                  justifySelf: \"center\",\r\n                }}\r\n              >\r\n                {moment(el.created_at).startOf(\"mm\").fromNow()}\r\n              </div>\r\n              <p\r\n                style={{\r\n                  margin: \"0\",\r\n                  color: \"grey\",\r\n                  fontStyle: \"italic\",\r\n                  alignSelf:\r\n                    el.sender_id === getcookie ? \"flex-start\" : \"flex-end\",\r\n                }}\r\n              >\r\n                {el.fullname}\r\n              </p>\r\n              <p\r\n                style={{\r\n                  position: \"relative\",\r\n                  width: window.innerWidth <= 768 ? \"70%\" : \"25%\",\r\n                  margin: \"5px\",\r\n                  padding: \"15px\",\r\n                  borderRadius: \"10px\",\r\n                  alignSelf:\r\n                    el.sender_id === getcookie ? \"flex-start\" : \"flex-end\",\r\n                  backgroundColor:\r\n                    el.sender_id === getcookie ? \"#595959\" : \"#E99AF2\",\r\n\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <Avatar\r\n                  size={25}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: -3,\r\n                    border: \"1px solid white\",\r\n                  }}\r\n                  icon={\r\n                    <img\r\n                      // src={\r\n                      //   el.images\r\n                      //     ? el.images\r\n                      //     : el.images[0]\r\n                      //     ? el.images[0]\r\n                      //     : \"https://www.pngitem.com/pimgs/m/581-5813504_avatar-dummy-png-transparent-png.png\"\r\n                      // }\r\n                      src={el.images[0]}\r\n                      alt=\"avatar\"\r\n                      width=\"150px\"\r\n                    />\r\n                  }\r\n                />\r\n                {el.message}\r\n              </p>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div>\r\n        <Chat sendTo={sendTo} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetInsideMessages;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport Axios from \"axios\";\r\nimport GetInsideMessages from \"./GetInsideMessages\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./MyMessages.css\";\r\n//ANT DESIGN\r\nimport { Tabs, Badge } from \"antd\";\r\nimport { Avatar } from \"antd\";\r\n\r\n//\r\nconst MyMessages = () => {\r\n  const { TabPane } = Tabs; //ANT\r\n\r\n  // const [mymessages, setMyMessages] = useState([]);\r\n  const dispatch = useDispatch(); //Redux\r\n  const mymessages = useSelector((state) => state.myConversations); // Redux Selector\r\n  const openID = useSelector((state) => state.conversationReducer);\r\n  const msgNotifc = useSelector((state) => state.myNotifications);\r\n\r\n  const handleOpen = useCallback(\r\n    (id) => {\r\n      dispatch({ type: \"CHANGE_CONVERSATION_ID\", action: Number(id) });\r\n      Axios({\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        data: { conversation_id: Number(id) },\r\n        withCredentials: true,\r\n        url: `https://dateappeldate.herokuapp.com/notifications/readmsgnotifications`,\r\n      })\r\n        .then((res) => {})\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/chat/getmyconversations`,\r\n    })\r\n      .then((res) => {\r\n        // setMyMessages(res.data);\r\n        dispatch({ type: \"FETCH_MY_CONVERSATIONS\", action: res.data });\r\n        // handleOpen(res.data[0].conversation_id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [handleOpen, dispatch]);\r\n\r\n  if (!mymessages.length) {\r\n    return <h1> No conversations found yet..</h1>;\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        margin: \"0 auto\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Tabs\r\n        onChange={handleOpen}\r\n        defaultActiveKey={\r\n          openID === null ? mymessages[0].conversation_id : `${openID}`\r\n        }\r\n        tabPosition={window.innerWidth <= 768 ? \"top\" : \"left\"}\r\n        style={{\r\n          margin: \"0 auto\",\r\n          width: \"100%\",\r\n          height: window.innerWidth <= 768 ? \"80%\" : \"800px\",\r\n        }}\r\n      >\r\n        {mymessages.map((el, index) => {\r\n          return (\r\n            <TabPane\r\n              tab={\r\n                <div className=\"tabNames\">\r\n                  {msgNotifc.messages.filter(\r\n                    (z) => z.conversation_id === el.conversation_id\r\n                  ).length ? (\r\n                    <Badge\r\n                      count={\r\n                        <div\r\n                          style={{\r\n                            color: \"white\",\r\n                            backgroundColor: \"red\",\r\n                            borderRadius: \"100%\",\r\n                            width: \"25px\",\r\n                            padding: \"5px\",\r\n                            margin: 0,\r\n                            zIndex: 3,\r\n                          }}\r\n                        >\r\n                          {\r\n                            msgNotifc.messages.filter(\r\n                              (z) => z.conversation_id === el.conversation_id\r\n                            ).length\r\n                          }\r\n                        </div>\r\n                      }\r\n                    ></Badge>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  <Avatar\r\n                    size={window.innerWidth <= 768 ? 25 : 75}\r\n                    style={{\r\n                      margin: \"5px\",\r\n\r\n                      borderRadius: \"100%\",\r\n                      border:\r\n                        openID === el.conversation_id\r\n                          ? \"5px solid #E99AF2\"\r\n                          : \"none\",\r\n                    }}\r\n                    icon={\r\n                      <img\r\n                        src={\r\n                          el.images[0]\r\n                            ? el.images[0]\r\n                            : \"https://www.pngitem.com/pimgs/m/581-5813504_avatar-dummy-png-transparent-png.png\"\r\n                        }\r\n                        alt=\"avatar\"\r\n                        width=\"150px\"\r\n                      />\r\n                    }\r\n                  />\r\n                  <p>{el.fullname}</p>\r\n                </div>\r\n              }\r\n              key={el.conversation_id}\r\n              disabled={index === 28}\r\n              style={{ height: \"800px\" }}\r\n            >\r\n              <GetInsideMessages\r\n                open={true}\r\n                conversationID={openID}\r\n                sendTo={el.user_id}\r\n                mymessages={mymessages}\r\n              />\r\n            </TabPane>\r\n          );\r\n        })}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessages;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n//ANT DESIGN\r\nimport { Avatar, Typography, Divider } from \"antd\";\r\n\r\nconst Myprofile = () => {\r\n  const { Title, Text } = Typography; // ANT DESIGN\r\n  const myprofileREDUX = useSelector((state) => state.myProfileReducer);\r\n\r\n  return (\r\n    <div>\r\n      <Avatar\r\n        style={{ border: \"1px solid #003a8c\" }}\r\n        size={130}\r\n        src={\r\n          myprofileREDUX.images.length\r\n            ? myprofileREDUX.images[0]\r\n            : \"https://www.pngitem.com/pimgs/m/581-5813504_avatar-dummy-png-transparent-png.png\"\r\n        }\r\n      />\r\n      <Divider style={{ width: \"80%\" }} />\r\n      <Text type=\"secondary\">Logged in as</Text>\r\n      <Title style={{ marginTop: \"0\" }} level={4}>\r\n        {myprofileREDUX.fullname}\r\n      </Title>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Myprofile;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { message, Button, Avatar } from \"antd\"; // ANT\r\nimport { useSelector } from \"react-redux\"; // REDUX\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\"; // ANT\r\nimport \"antd/dist/antd.css\";\r\nconst FormData = require(\"form-data\");\r\n\r\nconst UploadImage = () => {\r\n  const [image, setImage] = useState({ file: \"\" });\r\n  const myprofileREDUX = useSelector((state) => state.myProfileReducer);\r\n  const onChangeImage = (e) => {\r\n    beforeUpload(e.target.files[0]);\r\n    setImage({ file: e.target.files });\r\n  };\r\n\r\n  ////ANT DESIGN STATES\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setimageUrl] = useState(\r\n    myprofileREDUX.images.length\r\n      ? myprofileREDUX.images[0]\r\n      : \"https://www.pngitem.com/pimgs/m/581-5813504_avatar-dummy-png-transparent-png.png\"\r\n  );\r\n  //////\r\n  const form = new FormData();\r\n  form.append(\"profileImage\", image.file[0]);\r\n\r\n  const changeProfileImage = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    Axios({\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: form,\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/pictures/addprofilepicture\",\r\n    })\r\n      .then((res) => {\r\n        //res.data.data[0].images[0]\r\n        if (res.status === 200) {\r\n          setLoading(false);\r\n          setimageUrl(res.data.data[0].images[0]);\r\n          message.success(\"Profile picture changed!\");\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"You can only upload JPG/PNG file!\");\r\n        message.error(\"Image must smaller than 2MB!\");\r\n      });\r\n  };\r\n\r\n  // FORM ANT DESIGN\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: window.innerWidth <= 768 ? \"column\" : \"row\",\r\n\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        borderBottom: \"1px solid #ccc\",\r\n        marginBottom: \"25px\",\r\n\r\n        paddingBottom: \"25px\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Avatar\r\n          style={{ border: \"1px solid #003a8c\" }}\r\n          size={130}\r\n          src={imageUrl}\r\n        />\r\n      </div>\r\n      <form\r\n        onSubmit={changeProfileImage}\r\n        style={{\r\n          width: \"70%\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n          borderRadius: \"5px\",\r\n          height: \"70%\",\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          marginTop: window.innerWidth <= 768 ? \"25px\" : \"\",\r\n        }}\r\n      >\r\n        <input type=\"file\" name=\"profileImage\" onChange={onChangeImage} />\r\n        <Button\r\n          type=\"primary\"\r\n          icon={loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n          onClick={changeProfileImage}\r\n        >\r\n          Upload\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Image, message, Button } from \"antd\"; //ANT\r\nimport {\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\"; // ANT\r\nconst FormData = require(\"form-data\");\r\n\r\nconst Myalbum = () => {\r\n  const [myalbum, setMyalbum] = useState([]);\r\n  const [loading, setLoading] = useState(false); // Loading upload\r\n  const [deleteLoading, setDeleteLoading] = useState(false); // loading when delete\r\n  const [profileLoading, setProfileLoading] = useState(false); // loading when make profil pic\r\n\r\n  const [image, setImage] = useState({ file: \"\" });\r\n\r\n  const onChangeImage = (e) => {\r\n    const thearrimg = e.target.files;\r\n\r\n    [...thearrimg].map((el) => beforeUpload(el));\r\n\r\n    setImage({ file: e.target.files });\r\n  };\r\n  const form = new FormData();\r\n  for (const key of Object.keys(image.file)) {\r\n    form.append(\"albumImage\", image.file[key]);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n  const changeProfileImage = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    Axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: form,\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/pictures/addtoalbum\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoading(false);\r\n          message.success(\"Sucsessfuly added !\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/users/getmyalbum`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setMyalbum(res.data.data.album);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [loading, deleteLoading, profileLoading]);\r\n\r\n  const deleteAlbumItem = (param) => {\r\n    setDeleteLoading(true);\r\n    Axios({\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: { deleteItem: param },\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/pictures/deletealbumitem`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setDeleteLoading(false);\r\n          message.success(\"Sucsessfuly Deleted !\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const albumToProfile = (param) => {\r\n    setProfileLoading(true);\r\n    Axios({\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: { profileItem: param },\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/pictures/albumtoProfile`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setProfileLoading(false);\r\n          message.success(\r\n            \"Sucsessfuly added Profile Picture, refresh to see changes !\"\r\n          );\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          border: \"1px solid #ccc\",\r\n          padding: \"15px\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n      >\r\n        <form\r\n          onSubmit={changeProfileImage}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <input\r\n            type=\"file\"\r\n            name=\"albumImage\"\r\n            onChange={onChangeImage}\r\n            multiple\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            icon={loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n            onClick={changeProfileImage}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <Image.PreviewGroup>\r\n          {myalbum.length && myalbum != null\r\n            ? myalbum.map((el, index) => {\r\n                return (\r\n                  <div\r\n                    key={el}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      margin: \"5px\",\r\n                      width: window.innerWidth <= 768 ? 95 : 100,\r\n                    }}\r\n                  >\r\n                    <Image width={100} height={100} src={el} />{\" \"}\r\n                    <Button\r\n                      onClick={() => deleteAlbumItem(el)}\r\n                      style={{\r\n                        margin: \"5px\",\r\n                        borderRadius: \"5px\",\r\n                      }}\r\n                      icon={\r\n                        deleteLoading ? <LoadingOutlined /> : <DeleteOutlined />\r\n                      }\r\n                      danger\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => albumToProfile(el)}\r\n                      style={{\r\n                        borderRadius: \"5px\",\r\n                      }}\r\n                      icon={\r\n                        deleteLoading ? <LoadingOutlined /> : <UserOutlined />\r\n                      }\r\n                      type=\"primary\"\r\n                    >\r\n                      profile\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })\r\n            : \"You dont have any photos yet !\"}\r\n        </Image.PreviewGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Myalbum;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport Myalbum from \"./Myalbum\";\r\n// ANT\r\nimport { Input, Button, Modal, Select, DatePicker, Tabs } from \"antd\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\nimport { useLocation, useHistory } from \"react-router-dom\"; // ROUTER\r\n//REDUX\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport const EditProfile = () => {\r\n  const location = useLocation(); //ROUTER\r\n\r\n  const history = useHistory(); // ROUTER\r\n  const { Option } = Select;\r\n  const [tablevel, setTabLevel] = useState(1); // ANT TABS\r\n  const { TabPane } = Tabs; // ANT\r\n  const { TextArea } = Input; // ANT\r\n  const [isModalVisible, setIsModalVisible] = useState(\r\n    location.pathname === \"/updatemyprofile\" ? true : false\r\n  ); // ANT MODAL toggle\r\n  const dispatch = useDispatch(); //REDUX\r\n  const myprofileREDUX = useSelector((state) => state.myProfileReducer); // REDUX\r\n  const [error, setError] = useState([]);\r\n\r\n  const [form, setForm] = useState({\r\n    fullname: myprofileREDUX.fullname,\r\n    nickname: myprofileREDUX.nickname,\r\n    description: myprofileREDUX.description,\r\n    sex: myprofileREDUX.sex,\r\n    phone: myprofileREDUX.phone,\r\n    relationship: myprofileREDUX.relationship,\r\n    searching: myprofileREDUX.searching,\r\n    height: myprofileREDUX.height,\r\n    weight: myprofileREDUX.weight,\r\n    city: myprofileREDUX.city,\r\n    country: myprofileREDUX.country,\r\n    age: myprofileREDUX.age,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setForm({\r\n      fullname: myprofileREDUX.fullname,\r\n      nickname: myprofileREDUX.nickname,\r\n      description: myprofileREDUX.description,\r\n      sex: myprofileREDUX.sex,\r\n      phone: myprofileREDUX.phone,\r\n      relationship: myprofileREDUX.relationship,\r\n      searching: myprofileREDUX.searching,\r\n      height: myprofileREDUX.height,\r\n      weight: myprofileREDUX.weight,\r\n      city: myprofileREDUX.city,\r\n      country: myprofileREDUX.country,\r\n      age: myprofileREDUX.age,\r\n    });\r\n    setError([]);\r\n  }, [myprofileREDUX]);\r\n\r\n  const handleChange = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    Axios({\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        fullname: form.fullname,\r\n        nickname: form.nickname,\r\n        description: form.description,\r\n        sex: form.sex,\r\n        relationship: form.relationship,\r\n        searching: form.searching,\r\n        height: form.height === \"\" ? null : form.height,\r\n        weight: form.weight === \"\" ? null : form.weight,\r\n        city: form.city,\r\n        country: form.country,\r\n        age: form.age === \"\" ? null : form.age,\r\n      },\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/users/updateprofile\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch({ type: \"RE_TRIGGER\" });\r\n          setIsModalVisible(false);\r\n          if (location.pathname === \"/updatemyprofile\") {\r\n            history.push(\"/\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(error.response.data);\r\n      });\r\n  };\r\n\r\n  // ANT MODAL\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  // ANT TAB\r\n  function callback(key) {\r\n    setTabLevel(key);\r\n  }\r\n  return (\r\n    <div style={{ marginTop: \"25px\" }}>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={showModal}\r\n        className=\"btnSettings\"\r\n        icon={\r\n          <SettingOutlined style={{ fontSize: \"25px\", cursor: \"Pointer\" }} />\r\n        }\r\n      ></Button>\r\n      <p\r\n        onClick={showModal}\r\n        style={{\r\n          color: \"grey\",\r\n          fontWeight: \"600\",\r\n          marginTop: \"5px\",\r\n          cursor: \"Pointer\",\r\n        }}\r\n      >\r\n        Edit Profile\r\n      </p>\r\n\r\n      <Modal\r\n        title={`Fill the details and then Save changes!`}\r\n        visible={isModalVisible}\r\n        okButtonProps={{ style: { display: \"none\" } }}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Tabs defaultActiveKey={tablevel} onChange={callback}>\r\n          <TabPane tab=\"Profile Details\" key=\"1\">\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"80%\",\r\n                justifyContent: \"space-between\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <label>\r\n                Fullname\r\n                <Input\r\n                  placeholder=\"First and Second name\"\r\n                  type=\"text\"\r\n                  name=\"fullname\"\r\n                  value={form.fullname}\r\n                  onChange={handleChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                Genre\r\n                <Input.Group compact>\r\n                  <Select\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"sex\"\r\n                    placeholder=\"First and Second name\"\r\n                    defaultValue={form.sex}\r\n                    value={form.sex}\r\n                    onChange={(e) => {\r\n                      setForm({ ...form, sex: e });\r\n                    }}\r\n                  >\r\n                    <Option value=\"Male\">Male</Option>\r\n                    <Option value=\"Woman\">Woman</Option>\r\n                    <Option value=\"Other\">Other</Option>\r\n                  </Select>\r\n                </Input.Group>\r\n              </label>\r\n              <label>\r\n                Nickname\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"nickname\"\r\n                  value={form.nickname}\r\n                  onChange={handleChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                About me\r\n                <TextArea\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={form.description}\r\n                  onChange={handleChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                Relationship\r\n                <Input.Group compact>\r\n                  <Select\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"relationship\"\r\n                    placeholder=\"Relationship status\"\r\n                    defaultValue={form.relationship}\r\n                    value={form.relationship}\r\n                    onChange={(e) => {\r\n                      setForm({ ...form, relationship: e });\r\n                    }}\r\n                  >\r\n                    <Option value=\"Single\">Single</Option>\r\n                    <Option value=\"In relationship\">In relationship</Option>\r\n                    <Option value=\"Married\">Married</Option>\r\n                    <Option value=\"Other\">Other</Option>\r\n                  </Select>\r\n                </Input.Group>\r\n              </label>\r\n              <label>\r\n                Interested in\r\n                <Input.Group compact>\r\n                  <Select\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"searching\"\r\n                    placeholder=\"Looking for ....\"\r\n                    defaultValue={form.searching}\r\n                    value={form.searching}\r\n                    onChange={(e) => {\r\n                      setForm({ ...form, searching: e });\r\n                    }}\r\n                  >\r\n                    <Option value=\"Male\">Male</Option>\r\n                    <Option value=\"Woman\">Woman</Option>\r\n                    <Option value=\"Other\">Other</Option>\r\n                  </Select>\r\n                </Input.Group>\r\n              </label>\r\n\r\n              <label>\r\n                Height\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"height\"\r\n                  value={form.height}\r\n                  onChange={handleChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                Weight\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"weight\"\r\n                  value={form.weight}\r\n                  onChange={handleChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                City\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  value={form.city}\r\n                  onChange={handleChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                Country\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"country\"\r\n                  value={form.country}\r\n                  onChange={handleChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                Year when im born\r\n                <p>\r\n                  Your current age:{\" \"}\r\n                  {moment(myprofileREDUX.age, \"YYYYMMDD\").fromNow(true)}\r\n                </p>\r\n                <DatePicker\r\n                  type=\"date\"\r\n                  name=\"age\"\r\n                  // onChange={handleChange}\r\n                  onChange={(e) =>\r\n                    setForm({ ...form, age: moment(e).format(\"YYYY-MM-DD\") })\r\n                  }\r\n                />\r\n              </label>\r\n              <Button\r\n                type=\"submit\"\r\n                value=\"Save\"\r\n                className=\"btnsave\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </form>\r\n            {error.errors &&\r\n              error.errors.map((el, index) => {\r\n                return (\r\n                  <div key={index} style={{ color: \"red\" }}>\r\n                    {el.param} : {el.msg}\r\n                  </div>\r\n                );\r\n              })}\r\n          </TabPane>\r\n          <TabPane tab=\"Pictures managment\" key=\"2\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <h2 style={{ textAlign: \"center\" }}>Profile Picture</h2>\r\n              <UploadImage />\r\n              <h2 style={{ textAlign: \"center\" }}>Albums Photo</h2>\r\n              <Myalbum />\r\n            </div>\r\n          </TabPane>\r\n        </Tabs>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\"; //REDUX\r\n//ANT\r\nimport { Input, Button } from \"antd\";\r\nimport {\r\n  EyeInvisibleOutlined,\r\n  EyeTwoTone,\r\n  FacebookOutlined,\r\n  LoginOutlined,\r\n} from \"@ant-design/icons\";\r\nconst Login = ({ closeNav }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const faceboookLogin = () => {\r\n    window.location = \"https://dateappeldate.herokuapp.com/users/auth/facebook\";\r\n  };\r\n  const handleChange = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    Axios({\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        email: form.email,\r\n        password: form.password,\r\n      },\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/users/login\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch({ type: \"CHECK_IF_LOGGED_IN\", action: true });\r\n          dispatch({ type: \"RE_TRIGGER\" });\r\n          setError(\"\");\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response.status); // 401\r\n        // console.log(error.response.data.message);\r\n        if (error.response.data.message) {\r\n          setError(error.response.data.message);\r\n        } else if (error.response.data.errors[0].msg) {\r\n          setError(error.response.data.errors[0].msg);\r\n        }\r\n        console.log(error);\r\n        // console.log(\"xD\", error.response.data.errors.errors[0].msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"80%\",\r\n        textAlign: \"left\",\r\n        marginTop: window.innerWidth <= 768 ? \"100px\" : \"\",\r\n      }}\r\n    >\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Email:\r\n          <Input\r\n            style={{ borderRadius: \"15px\" }}\r\n            placeholder=\"Your login email\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <Input.Password\r\n            placeholder=\"Write password\"\r\n            style={{ borderRadius: \"15px\" }}\r\n            iconRender={(visible) =>\r\n              visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n            }\r\n            type=\"text\"\r\n            name=\"password\"\r\n            value={form.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      </form>\r\n      <div style={{ margin: \"5px\" }}>\r\n        <Button\r\n          icon={<LoginOutlined />}\r\n          className=\"loginBtn\"\r\n          onClick={handleSubmit}\r\n        >\r\n          Log in\r\n        </Button>\r\n        <Button\r\n          icon={<FacebookOutlined />}\r\n          className=\"facebookBtn\"\r\n          onClick={faceboookLogin}\r\n        >\r\n          Facebook login\r\n        </Button>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <span className=\"register\">\r\n            {\" \"}\r\n            <Link to=\"/register\" style={{ color: \"black\" }} onClick={closeNav}>\r\n              Register/\r\n            </Link>\r\n          </span>{\" \"}\r\n          <span className=\"register\">\r\n            {\" \"}\r\n            <Link\r\n              to=\"/forgotpassword\"\r\n              style={{ color: \"black\" }}\r\n              onClick={closeNav}\r\n            >\r\n              Forgot Password?\r\n            </Link>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Badge } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  AlertOutlined,\r\n  MessageOutlined,\r\n  FireOutlined,\r\n} from \"@ant-design/icons\"; // ANT\r\nimport { useDispatch, useSelector } from \"react-redux\"; //REDUX\r\nconst Notifications = ({ closeNav }) => {\r\n  const dispatch = useDispatch(); // REDUX\r\n  const msgNotifc = useSelector((state) => state.myNotifications); // REDUX\r\n  const openID = useSelector((state) => state.conversationReducer);\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/notifications/getmsgnotifications`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch({ type: \"MESSAGE_NOTIFICATIONS\", action: res.data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [dispatch, openID]);\r\n  return (\r\n    <div className=\"notifications\">\r\n      <Link to=\"/mymatches\" onClick={closeNav}>\r\n        <Badge\r\n          count={\r\n            <AlertOutlined\r\n              style={{\r\n                color: \"white\",\r\n                backgroundColor: \"red\",\r\n                borderRadius: \"100%\",\r\n                padding: \"5px\",\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <FireOutlined style={{ fontSize: \"40px\" }} />\r\n        </Badge>\r\n      </Link>\r\n      <Link to=\"/mymessages\" onClick={closeNav}>\r\n        <Badge\r\n          count={\r\n            msgNotifc.messages.length ? (\r\n              <div\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"red\",\r\n                  borderRadius: \"100%\",\r\n                  width: \"25px\",\r\n                  padding: \"5px\",\r\n                  margin: 0,\r\n                }}\r\n              >\r\n                {msgNotifc.messages.length}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          }\r\n        >\r\n          <MessageOutlined style={{ fontSize: \"40px\" }} />\r\n        </Badge>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Layout.css\";\r\nimport Myprofile from \"../components/user/Myprofile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditProfile from \"../components/user/EditProfile\";\r\nimport Login from \"../components/user/Login\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useDispatch, useSelector } from \"react-redux\"; //REDUX\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Notifications from \"./Notifications\";\r\n//ANT\r\nimport {\r\n  HomeOutlined,\r\n  MessageOutlined,\r\n  FireOutlined,\r\n  UsergroupAddOutlined,\r\n  MenuOutlined,\r\n  CloseCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nconst Layout = (props) => {\r\n  const getcookie = Number(Cookies.get(\"token\"));\r\n  const dispatch = useDispatch(); // REDUX\r\n  const isLoged = useSelector((state) => state.AmiLogged); // REDUX\r\n  const reTrigger = useSelector((state) => state.toggleTriggerFetchs); // REDUX\r\n  const history = useHistory(); // ROUTER\r\n  const [open, setOpen] = useState(false); //TOGGLE\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/getcookie`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch({ type: \"CHECK_IF_LOGGED_IN\", action: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [reTrigger, dispatch]);\r\n  ////\r\n\r\n  ///Gives me my Profile Stats\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/users/getuser`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch({\r\n            type: \"FETCH_MY_PROFILE\",\r\n            action: res.data.profile,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [getcookie, reTrigger, dispatch]);\r\n  //Gets my COnversations\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/chat/getmyconversations`,\r\n    })\r\n      .then((res) => {\r\n        // setMyMessages(res.data);\r\n        dispatch({ type: \"FETCH_MY_CONVERSATIONS\", action: res.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [dispatch, getcookie, reTrigger]);\r\n  //\r\n  const logout = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/users/logout\",\r\n    }).then((res) => {\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: \"RESET_PROFILE\",\r\n        });\r\n        dispatch({\r\n          type: \"CHECK_IF_LOGGED_IN\",\r\n          action: false,\r\n        });\r\n        dispatch({\r\n          type: \"RE_TRIGGER\",\r\n        });\r\n        Cookies.remove(\"token\");\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n  const closeNav = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <div className=\"LayoutBackgorund\">\r\n      <div className=\"btnToggle\" onClick={() => setOpen(!open)}>\r\n        {open ? <CloseCircleOutlined /> : <MenuOutlined />}\r\n      </div>\r\n      <div className=\"transperantBackground\">\r\n        <div\r\n          className={\"leftMenu\"}\r\n          style={\r\n            window.innerWidth <= 768 ? { display: open ? \"flex\" : \"none\" } : {}\r\n          }\r\n        >\r\n          {isLoged ? (\r\n            <div>\r\n              <Myprofile />\r\n              <Notifications closeNav={closeNav} />\r\n            </div>\r\n          ) : (\r\n            <Login closeNav={closeNav} />\r\n          )}\r\n\r\n          <div className=\"Menu\">\r\n            <nav>\r\n              <ul className=\"navigator\">\r\n                <Link\r\n                  onClick={() => setOpen(!open)}\r\n                  style={{\r\n                    color: \"white\",\r\n                  }}\r\n                  to=\"/\"\r\n                >\r\n                  <HomeOutlined />\r\n                  Home\r\n                </Link>\r\n                <Link\r\n                  onClick={() => setOpen(!open)}\r\n                  style={{\r\n                    color: \"white\",\r\n                  }}\r\n                  to=\"/allprofiles\"\r\n                >\r\n                  <UsergroupAddOutlined />\r\n                  Profiles\r\n                </Link>\r\n                <Link\r\n                  onClick={() => setOpen(!open)}\r\n                  style={{\r\n                    color: \"white\",\r\n                  }}\r\n                  to=\"/matchme\"\r\n                >\r\n                  <FireOutlined />\r\n                  Match\r\n                </Link>\r\n                <Link\r\n                  onClick={() => setOpen(!open)}\r\n                  style={{\r\n                    color: \"white\",\r\n                  }}\r\n                  to=\"/mymessages\"\r\n                >\r\n                  <MessageOutlined />\r\n                  Messages\r\n                </Link>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          {isLoged && (\r\n            <div>\r\n              <EditProfile />\r\n              <p style={{ marginTop: \"0\" }} onClick={logout} className=\"logout\">\r\n                Sign Out\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"rightMenu\">{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\"; //REDUX\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isLoged = useSelector((state) => state.AmiLogged);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoged ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\"; //Router\r\nimport { Input, DatePicker } from \"antd\"; //ANT\r\nimport { useDispatch } from \"react-redux\"; //REDUX\r\nimport moment from \"moment\";\r\nimport \"./RegForm.css\";\r\nexport const RegistrationForm = () => {\r\n  const dispatch = useDispatch(); // REDUX\r\n  const history = useHistory(); // ROUTER\r\n  const [error, setError] = useState([]);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n    username: \"\",\r\n    age: \"\",\r\n  });\r\n  const handleChange = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    Axios({\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        email: form.email,\r\n        password: form.password,\r\n        passwordConfirmation: form.passwordConfirmation,\r\n        username: form.username,\r\n        age: form.age,\r\n      },\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/users/newuser\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setForm({\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordConfirmation: \"\",\r\n            username: \"\",\r\n            age: \"\",\r\n          });\r\n          dispatch({ type: \"CHECK_IF_LOGGED_IN\", action: true });\r\n          dispatch({ type: \"RE_TRIGGER\" });\r\n          setError([]);\r\n          history.push(\"/updatemyprofile\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(error.response.data.errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"0 auto\", height: \"700px\", width: \"100%\" }}>\r\n      <form onSubmit={handleSubmit} className=\"regForm \">\r\n        <label>\r\n          email\r\n          <Input\r\n            placeholder=\"Email adress\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Full name\r\n          <Input\r\n            placeholder=\"First and Second name\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={form.username}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <Input.Password\r\n            placeholder=\"password\"\r\n            type=\"text\"\r\n            name=\"password\"\r\n            value={form.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Confirm password\r\n          <Input.Password\r\n            placeholder=\"Confirm password\"\r\n            type=\"text\"\r\n            name=\"passwordConfirmation\"\r\n            value={form.passwordConfirmation}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          What year are you born?\r\n          <DatePicker\r\n            placeholder=\"What year are you born..\"\r\n            type=\"date\"\r\n            name=\"age\"\r\n            onChange={(e) =>\r\n              setForm({ ...form, age: moment(e).format(\"YYYY-MM-DD\") })\r\n            }\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n      {error.length\r\n        ? error.map((el, index) => {\r\n            return (\r\n              <p style={{ color: \"red\" }} key={index}>\r\n                {el.param} :{el.msg}\r\n              </p>\r\n            );\r\n          })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\r\nimport EditProfile from \"./EditProfile\";\r\nconst RedirectProfile = () => {\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <h1>Please update your profile, press the button to start!</h1>\r\n      <EditProfile />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedirectProfile;\r\n","import React, { useState } from \"react\";\r\nimport \"./RegForm.css\";\r\nimport Axios from \"axios\";\r\n//ANT\r\nimport { Input } from \"antd\";\r\nconst ForgotPassword = () => {\r\n  const [form, setForm] = useState({ email: \"\" });\r\n  const [error, setError] = useState([]);\r\n  const [success, setSuccess] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    Axios({\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        email: form.email,\r\n      },\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/users/forgotpassword\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setError([]);\r\n          setSuccess(res.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setSuccess(\"\");\r\n        if (error.response.data.message) {\r\n          setError(error.response.data.message);\r\n        } else if (error.response.data.errors) {\r\n          setError(error.response.data.errors);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div style={{ margin: \"0 auto\", height: \"200px\", width: \"100%\" }}>\r\n      <form onSubmit={handleSubmit} className=\"regForm\">\r\n        <label>\r\n          Write your email adress:\r\n          <Input\r\n            style={{ borderRadius: \"15px\" }}\r\n            placeholder=\"Your login email\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n      {error.length\r\n        ? error.map((el, index) => {\r\n            return (\r\n              <p style={{ color: \"red\" }} key={index}>\r\n                {el.param} :{el.msg}\r\n              </p>\r\n            );\r\n          })\r\n        : \"\"}\r\n      {success ? (\r\n        <p style={{ color: \"green\", fontWeight: \"600\", margin: \"5px\" }}>\r\n          {success}\r\n        </p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState } from \"react\";\r\nimport \"./RegForm.css\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\"; // ROUTER\r\n//ANT\r\nimport { Input } from \"antd\";\r\nconst ResetPassword = () => {\r\n  const location = useParams(); //ROUTER\r\n\r\n  const [form, setForm] = useState({ password: \"\", passwordConfirmation: \"\" });\r\n  const [error, setError] = useState([]);\r\n  const [success, setSuccess] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    Axios({\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        password: form.password,\r\n        passwordConfirmation: form.passwordConfirmation,\r\n      },\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/users/resetpassword/${location.id}`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setError([]);\r\n          setSuccess(res.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setSuccess(\"\");\r\n        if (error.response.data.message) {\r\n          setError(error.response.data.message);\r\n        } else if (error.response.data.errors) {\r\n          setError(error.response.data.errors);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div style={{ margin: \"0 auto\", height: \"350px\", width: \"100%\" }}>\r\n      <form onSubmit={handleSubmit} className=\"regForm\">\r\n        <label>\r\n          New Password\r\n          <Input.Password\r\n            placeholder=\"password\"\r\n            type=\"text\"\r\n            name=\"password\"\r\n            value={form.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Confirm new password\r\n          <Input.Password\r\n            placeholder=\"Confirm password\"\r\n            type=\"text\"\r\n            name=\"passwordConfirmation\"\r\n            value={form.passwordConfirmation}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Save new password\" />\r\n      </form>\r\n      {error.length\r\n        ? error.map((el, index) => {\r\n            return (\r\n              <p style={{ color: \"red\" }} key={index}>\r\n                {el.param} :{el.msg}\r\n              </p>\r\n            );\r\n          })\r\n        : \"\"}\r\n      {success ? (\r\n        <p style={{ color: \"green\", fontWeight: \"600\", margin: \"5px\" }}>\r\n          {success}\r\n        </p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React, { useState, useMemo, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n// import TinderCard from '../react-tinder-card/index'\r\nimport TinderCard from \"react-tinder-card\";\r\nimport \"./MatchPage.css\";\r\nimport { Button, Alert, Spin } from \"antd\";\r\nimport {\r\n  HeartTwoTone,\r\n  FrownOutlined,\r\n  PlayCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\"; // moment\r\nfunction MatchPage() {\r\n  const [db, setDB] = useState([]);\r\n\r\n  const [characters, setCharacters] = useState(db);\r\n  const [lastDirection, setLastDirection] = useState(); //Right or Left\r\n  const [msg, setMsg] = useState(\"\"); // Name of profile\r\n\r\n  const [retrigger, setReTrigger] = useState(false);\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/matches/profiles\",\r\n    })\r\n      .then((res) => {\r\n        setDB(res.data);\r\n        setCharacters(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    return () => {};\r\n  }, [retrigger]);\r\n\r\n  const insertInMatches = (param) => {\r\n    Axios({\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        shown_user: param,\r\n      },\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/matches/insertmatch\",\r\n    })\r\n      .then((res) => {})\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const childRefs = useMemo(\r\n    () =>\r\n      Array(characters.length)\r\n        .fill(0)\r\n        .map((i) => React.createRef()),\r\n    [characters.length]\r\n  );\r\n  const swiped = (direction, name) => {\r\n    setLastDirection(direction);\r\n    if (direction === \"right\") setMsg(`${name} Match request`);\r\n  };\r\n\r\n  const outOfFrame = (userlog_id, index) => {\r\n    insertInMatches(userlog_id);\r\n    const copy = [...characters];\r\n    copy.splice(index, 1);\r\n    setCharacters(copy);\r\n  };\r\n\r\n  const swipe = (dir, index) => {\r\n    setLastDirection(dir);\r\n\r\n    const msgcopy = [...characters];\r\n    const copy = [...characters];\r\n    copy.splice(index, 1);\r\n    setCharacters(copy);\r\n    insertInMatches(msgcopy[index].userlog_id);\r\n    if (dir === \"right\") setMsg(`${msgcopy[index].fullname} Match request`);\r\n  };\r\n\r\n  if (!characters.length) {\r\n    return <Spin size=\"large\" />;\r\n  } else if (childRefs.length <= 1) {\r\n    return (\r\n      <h1>\r\n        Press here to start!\r\n        <Button onClick={() => setReTrigger(!retrigger)}>Start Again</Button>\r\n      </h1>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"cardContainer\">\r\n        {characters.map((character, index) => (\r\n          <TinderCard\r\n            ref={childRefs[index]}\r\n            className=\"swipe\"\r\n            key={index}\r\n            onSwipe={(dir) => swiped(dir, character.fullname, index)}\r\n            onCardLeftScreen={() => outOfFrame(character.userlog_id, index)}\r\n          >\r\n            <div\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  character.images.length\r\n                    ? character.images[0]\r\n                    : \"https://www.pngitem.com/pimgs/m/581-5813504_avatar-dummy-png-transparent-png.png\"\r\n                })`,\r\n              }}\r\n              className=\"card\"\r\n            >\r\n              <h3 style={{ width: \"100%\", fontSize: \"15px\" }}>\r\n                {character.fullname},\r\n                {moment(character.age, \"YYYYMMDD\").fromNow(true)},\r\n                {character.sex}\r\n              </h3>\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <Button\r\n                className=\"swipeLeft\"\r\n                onClick={() => swipe(\"left\", index)}\r\n              >\r\n                <FrownOutlined\r\n                  onClick={() => swipe(\"left\", index)}\r\n                  style={{\r\n                    fontSize: window.innerWidth <= 768 ? \"15px\" : \"50px\",\r\n                  }}\r\n                />\r\n                NOT\r\n              </Button>\r\n              <Button\r\n                className=\"swipeRight\"\r\n                onClick={() => swipe(\"right\", index)}\r\n              >\r\n                <HeartTwoTone\r\n                  onClick={() => swipe(\"right\", index)}\r\n                  style={{\r\n                    fontSize: window.innerWidth <= 768 ? \"15px\" : \"50px\",\r\n                  }}\r\n                  spin={true}\r\n                  twoToneColor=\"#f1bcd9\"\r\n                />\r\n                MATCH!\r\n              </Button>\r\n            </div>\r\n          </TinderCard>\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          margin: \"50px auto\",\r\n          padding: \"25px\",\r\n          marginTop: window.innerWidth <= 768 ? \"80px\" : \"\",\r\n        }}\r\n      >\r\n        {lastDirection ? (\r\n          lastDirection === \"right\" ? (\r\n            <div>\r\n              <Alert message={`${msg} :)`} type={\"success\"} showIcon />\r\n            </div>\r\n          ) : (\r\n            <Alert message={`Not match :(`} type={\"error\"} showIcon />\r\n          )\r\n        ) : (\r\n          <h2 className=\"infoText\">\r\n            Swipe a card or press a button to get started!\r\n          </h2>\r\n        )}\r\n      </div>\r\n      <Button\r\n        icon={<PlayCircleOutlined />}\r\n        className=\"startmatchAgain\"\r\n        onClick={() => window.location.reload()}\r\n      >\r\n        {\" \"}\r\n        Start matching from beginning?\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar, Spin } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nconst LatestProfiles = () => {\r\n  const [lastprofs, setLastprofs] = useState([]);\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/profiles/latestprofile\",\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setLastprofs(res.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    return () => {};\r\n  }, []);\r\n  if (!lastprofs.length) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"300px\",\r\n          marign: \"0 auto\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <Spin size=\"large\" />\r\n        Loading...\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      {lastprofs.map((el, index) => {\r\n        return (\r\n          <div key={index} style={{ margin: \"0 auto\" }}>\r\n            <Link to={`/allprofiles/${el.profile_id}`}>\r\n              <Avatar\r\n                style={{ border: \"1px solid pink\" }}\r\n                size={{ xs: 55, sm: 22, md: 32, lg: 44, xl: 50, xxl: 80 }}\r\n                src={el.images[0]}\r\n                alt={el.fullname}\r\n              />\r\n              <p>{el.fullname}</p>\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LatestProfiles;\r\n","import React from \"react\";\r\nimport { Carousel } from \"antd\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LatestProfiles from \"./LatestProfiles\";\r\nimport { RightCircleOutlined, HeartOutlined } from \"@ant-design/icons\"; // ANT\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"HomePageContainer\">\r\n      <div className=\"carouselDIV\">\r\n        <Carousel autoplay>\r\n          <div className=\"contentStyle\">\r\n            <h1>\r\n              <HeartOutlined\r\n                spin={true}\r\n                style={{\r\n                  color: \"pink\",\r\n                  marginBottom: \"0\",\r\n                }}\r\n              />\r\n              Join the community!\r\n            </h1>\r\n          </div>\r\n          <div className=\"contentStyle\">\r\n            <h5>\r\n              Search! Match! Date!{\" \"}\r\n              <HeartOutlined\r\n                spin={true}\r\n                style={{\r\n                  color: \"pink\",\r\n                  marginBottom: \"0\",\r\n                }}\r\n              />\r\n            </h5>\r\n          </div>\r\n        </Carousel>\r\n      </div>\r\n      <div className=\"signUpNow\">\r\n        <h1>Join us now !</h1>\r\n        <button>\r\n          <Link to=\"/register\">\r\n            <RightCircleOutlined /> Sign up{\" \"}\r\n          </Link>\r\n        </button>\r\n      </div>\r\n      <div className=\"latestUsers\">\r\n        <h1>Newest members!</h1>\r\n        <LatestProfiles />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Chat from \"../messages/Chat\";\r\nimport { Avatar, Button, Modal, Spin } from \"antd\"; // ANT\r\nimport { Link } from \"react-router-dom\"; // ROUTEr\r\nimport { WechatOutlined } from \"@ant-design/icons\"; // ANT ICONS\r\n\r\nconst ChildmyMatch = ({ matchID }) => {\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false); // ANT MODAL toggle\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: `https://dateappeldate.herokuapp.com/profiles/allprofiles/${matchID}`,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setProfile(res.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [matchID]);\r\n\r\n  // ANT MODAL\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  // If got covnersation\r\n\r\n  if (profile === null) {\r\n    return <Spin size=\"large\" />;\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: window.innerWidth <= 768 ? \"95%\" : \"80%\",\r\n        margin: \"5px\",\r\n        border: \"1px solid #ccc\",\r\n        padding: \"15px\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n    >\r\n      <Link to={`/allprofiles/${profile[0].profile_id}`}>\r\n        <div\r\n          style={{\r\n            flex: \"3\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            style={{ border: \"1px solid #003a8c\", marginRight: \"10px\" }}\r\n            size={180}\r\n            src={\r\n              profile[0].images.length\r\n                ? profile[0].images[0]\r\n                : \"https://www.pngitem.com/pimgs/m/581-5813504_avatar-dummy-png-transparent-png.png\"\r\n            }\r\n          />\r\n          <h2 style={{ color: \" #8bc6ec\", fontWeight: 700 }}>\r\n            {profile[0].fullname}\r\n          </h2>\r\n        </div>\r\n      </Link>\r\n      <div className=\"buttonsBox\" style={{ flex: 1 }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={showModal}\r\n          className=\"btnCHatStart\"\r\n          icon={<WechatOutlined style={{ fontSize: \"55px\" }} />}\r\n        ></Button>\r\n\r\n        <Modal\r\n          title={`Send a message if you wanta to start conversation with: ${profile[0].fullname}`}\r\n          visible={isModalVisible}\r\n          okButtonProps={{ style: { display: \"none\" } }}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Chat sendTo={profile[0].userlog_id} />\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChildmyMatch;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport ChildmyMatch from \"./ChildmyMatch\";\r\nconst MyMatches = () => {\r\n  const [mymatches, setMymatches] = useState([]);\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      withCredentials: true,\r\n      url: \"https://dateappeldate.herokuapp.com/matches/getmymatches\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) setMymatches(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n\r\n        display: \"flex\",\r\n        flexDirection: window.innerWidth <= 768 ? \"column\" : \"row\",\r\n        flexWrap: \"flex-wrap\",\r\n        justifyContent: \"flex-start\",\r\n\r\n        alignContent: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n      }}\r\n    >\r\n      {mymatches.map((el, index) => {\r\n        return <ChildmyMatch key={index} matchID={el.profile_id} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMatches;\r\n","import React from \"react\";\r\n\r\nimport AllProfiles from \"./components/profiles/AllProfiles\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport SingleProfile from \"./components/profiles/SingleProfile\";\r\nimport MyMessages from \"./components/messages/MyMessages\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport PrivateRoute from \"./CustomHook/PrivateRoute\";\r\nimport Login from \"./components/user/Login\";\r\nimport RegistrationForm from \"./components/user/RegistrationForm \";\r\nimport RedirectProfile from \"./components/user/RedirectProfile\";\r\nimport ForgotPassword from \"./components/user/ForgotPassword\";\r\nimport ResetPassword from \"./components/user/ResetPassword\";\r\nimport MatchPage from \"./components/match/MatchPage\";\r\nimport Home from \"./components/Home/Home\";\r\nimport MyMatches from \"./components/match/MyMatches\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <div style={{ margin: \"0 auto\" }}>\r\n              <h1 style={{ color: \"red\" }}>\r\n                You need to log in to use this part\r\n              </h1>\r\n              <Login />\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/register\">\r\n            <RegistrationForm />\r\n          </Route>\r\n          <Route path=\"/forgotpassword\">\r\n            <ForgotPassword />\r\n          </Route>\r\n          <Route path=\"/resetpassword/:id\">\r\n            <ResetPassword />\r\n          </Route>\r\n          <PrivateRoute path=\"/allprofiles/:id\" component={SingleProfile} />\r\n          <PrivateRoute exact path=\"/allprofiles\" component={AllProfiles} />\r\n\r\n          <PrivateRoute exact path=\"/matchme\" component={MatchPage} />\r\n          <PrivateRoute exact path=\"/mymatches\" component={MyMatches} />\r\n          <PrivateRoute exact path=\"/mymessages\" component={MyMessages} />\r\n          <PrivateRoute path=\"/updatemyprofile\" component={RedirectProfile} />\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          {/* Router */}\r\n        </Switch>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const incrementMe = (action, state) => {\r\n  return action.action + state;\r\n};\r\n\r\nexport const reTriggerFunc = (action, state) => {\r\n  return !state;\r\n};\r\n\r\n//EDIT CONVERSATION ID TO SEND TO BACKEND\r\nexport const changeConversationID = (action, state) => {\r\n  return action.action;\r\n};\r\n//--end\r\n// Functions to reducers!\r\n\r\n//My Profile Fetching Update\r\n\r\nexport const updateMyProfileState = (action, state) => {\r\n  return action.action;\r\n};\r\n\r\n//MY CONVERSATIONS Fetch updating\r\nexport const updateMyConversations = (action, state) => {\r\n  return action.action;\r\n};\r\n//Pushes to Conversations but not DB (Only so user can see it in front end )\r\nexport const pushToMyConversations = (action, state) => {\r\n  console.log(action, \"action\");\r\n  console.log(state, \"astaa\");\r\n  const copyState = [...state];\r\n  console.log(copyState, \"cop\");\r\n  copyState.push(action.action);\r\n\r\n  return state.push(action.action);\r\n};\r\n// Am i Logged in\r\nexport const isLoggedIn = (action, state) => {\r\n  return action.action;\r\n};\r\n\r\n//reset profile on logout\r\nexport const profileReset = (action, state) => {\r\n  const myprofile = {\r\n    fullname: \"\",\r\n    nickname: \"\",\r\n    description: \"\",\r\n    sex: \"\",\r\n    relationship: \"\",\r\n    searching: \"\",\r\n    height: \"\",\r\n    phone: \"\",\r\n    weight: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    age: \"\",\r\n    images: [],\r\n  };\r\n  return myprofile;\r\n};\r\n\r\n//msg notification\r\nexport const msgNotific = (action, state) => {\r\n  return { ...state, messages: action.action };\r\n};\r\n","import { updateMyConversations, pushToMyConversations } from \"./actions\";\r\n\r\nconst myProfileReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_MY_CONVERSATIONS\":\r\n      return updateMyConversations(action, state);\r\n    case \"PUSH_TO_MY_CONVERSATIONS_NODB\":\r\n      return pushToMyConversations(action, state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myProfileReducer;\r\n","import { reTriggerFunc } from \"./actions\";\r\nconst toggleTriggerFetchs = (state = true, action) => {\r\n  switch (action.type) {\r\n    case \"RE_TRIGGER\":\r\n      return reTriggerFunc(action, state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default toggleTriggerFetchs;\r\n","import { changeConversationID } from \"./actions\";\r\nconst conversationReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_CONVERSATION_ID\":\r\n      return changeConversationID(action, state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default conversationReducer;\r\n","import { updateMyProfileState, profileReset } from \"./actions\";\r\n\r\nconst myprofile = {\r\n  fullname: \"\",\r\n  nickname: \"\",\r\n  description: \"\",\r\n  sex: \"\",\r\n  relationship: \"\",\r\n  searching: \"\",\r\n  height: \"\",\r\n  phone: \"\",\r\n  weight: \"\",\r\n  city: \"\",\r\n  country: \"\",\r\n  age: \"\",\r\n  images: [],\r\n};\r\nconst myProfileReducer = (state = myprofile, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_MY_PROFILE\":\r\n      return updateMyProfileState(action, state);\r\n    case \"RESET_PROFILE\":\r\n      return profileReset(action, state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myProfileReducer;\r\n","import { msgNotific } from \"./actions\";\r\n\r\nconst myNotifications = (state = { messages: [], matches: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"MESSAGE_NOTIFICATIONS\":\r\n      return msgNotific(action, state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myNotifications;\r\n","import { isLoggedIn } from \"./actions\";\r\n\r\nimport Cookies from \"js-cookie\";\r\nconst getcookie = Number(Cookies.get(\"token\"));\r\nconst AmiLogged = (state = getcookie ? true : false, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_IF_LOGGED_IN\":\r\n      return isLoggedIn(action, state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AmiLogged;\r\n","import myConversations from \"./myConversations\";\r\nimport toggleTriggerFetchs from \"./toggleTriggerFetchs\";\r\nimport conversationReducer from \"./conversationReducer\";\r\nimport myProfileReducer from \"./myProfileReducer\";\r\nimport myNotifications from \"./myNotifications\";\r\nimport AmiLogged from \"./AmiLogged\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  myConversations: myConversations,\r\n  toggleTriggerFetchs: toggleTriggerFetchs,\r\n  conversationReducer: conversationReducer,\r\n  myProfileReducer: myProfileReducer,\r\n  AmiLogged: AmiLogged,\r\n  myNotifications: myNotifications,\r\n});\r\n\r\nexport default rootReducer;\r\n// This combines all reducers in to one\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Redux/main\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}